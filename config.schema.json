{
  "$ref": "#/definitions/config",
  "definitions": {
    "config": {
      "type": "object",
      "properties": {
        "setpoints": {
          "type": "object",
          "properties": {
            "csipAus": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "format": "uri",
                  "description": "The host of the CSIP-AUS server"
                },
                "dcapUri": {
                  "type": "string",
                  "description": "The URI of the DeviceCapability resource"
                },
                "nmi": {
                  "type": "string",
                  "minLength": 10,
                  "maxLength": 11,
                  "description": "For in-band registration, the NMI of the site"
                }
              },
              "required": [
                "host",
                "dcapUri"
              ],
              "additionalProperties": false,
              "description": "If defined, limit by CSIP-AUS server"
            },
            "fixed": {
              "type": "object",
              "properties": {
                "connect": {
                  "type": "boolean",
                  "description": "Whether the inverter should be connected to the grid"
                },
                "exportLimitWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "The export limit in watts"
                },
                "generationLimitWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "The generation limit in watts"
                },
                "importLimitWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "The import limit in watts"
                },
                "loadLimitWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "The load limit in watts"
                },
                "exportTargetWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Desired export when no solar (from battery)"
                },
                "importTargetWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Desired import for battery charging from grid"
                },
                "batterySocTargetPercent": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Target state of charge %"
                },
                "batterySocMinPercent": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Minimum reserve %"
                },
                "batterySocMaxPercent": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 100,
                  "description": "Maximum charge %"
                },
                "batteryChargeMaxWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Maximum charge rate (can override SunSpec)"
                },
                "batteryDischargeMaxWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Maximum discharge rate (can override SunSpec)"
                },
                "batteryPriorityMode": {
                  "type": "string",
                  "enum": [
                    "export_first",
                    "battery_first"
                  ],
                  "description": "Priority mode for solar allocation"
                },
                "batteryGridChargingEnabled": {
                  "type": "boolean",
                  "description": "Allow charging battery from grid"
                },
                "batteryGridChargingMaxWatts": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Maximum grid charging rate"
                }
              },
              "additionalProperties": false,
              "description": "If defined, limits by manual configuration"
            },
            "negativeFeedIn": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "amber"
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "The API key for the Amber API"
                    },
                    "siteId": {
                      "type": "string",
                      "description": "The site ID for the Amber API"
                    }
                  },
                  "required": [
                    "type",
                    "apiKey"
                  ],
                  "additionalProperties": false
                },
                {
                  "not": {}
                }
              ],
              "description": "If defined, limit by negative feed-in"
            },
            "twoWayTariff": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "ausgridEA029"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "sapnRELE2W"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "additionalProperties": false
                }
              ],
              "description": "If defined, limit by two-way tariff"
            },
            "mqtt": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "description": "The host of the MQTT broker, including \"mqtt://\""
                },
                "username": {
                  "type": "string",
                  "description": "The username for the MQTT broker"
                },
                "password": {
                  "type": "string",
                  "description": "The password for the MQTT broker"
                },
                "topic": {
                  "type": "string",
                  "description": "The topic to pull control limits from"
                }
              },
              "required": [
                "host",
                "topic"
              ],
              "additionalProperties": false,
              "description": "If defined, limit by MQTT"
            }
          },
          "additionalProperties": false,
          "description": "Setpoints configuration"
        },
        "inverters": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "sunspec"
                  },
                  "batteryControlEnabled": {
                    "type": "boolean",
                    "description": "Whether to control battery storage for this inverter"
                  },
                  "connection": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "tcp"
                          },
                          "ip": {
                            "type": "string",
                            "pattern": "^(\\d{1,3}\\.){3}\\d{1,3}$",
                            "description": "The IP address of the Modbus device"
                          },
                          "port": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 65535,
                            "description": "The port of the Modbus device"
                          }
                        },
                        "required": [
                          "type",
                          "ip",
                          "port"
                        ],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "const": "rtu"
                          },
                          "path": {
                            "type": "string",
                            "description": "The device path of the Modbus device"
                          },
                          "baudRate": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 115200,
                            "description": "The baud rate of the Modbus device"
                          }
                        },
                        "required": [
                          "type",
                          "path",
                          "baudRate"
                        ],
                        "additionalProperties": false
                      }
                    ]
                  },
                  "unitId": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 255,
                    "default": 1,
                    "description": "The unit/slave ID of the Modbus device. Defaults to 1."
                  },
                  "pollingIntervalMs": {
                    "type": "number",
                    "description": "The minimum number of seconds between polling, subject to the latency of the polling loop.",
                    "default": 200
                  }
                },
                "required": [
                  "type",
                  "connection"
                ],
                "additionalProperties": false,
                "description": "SunSpec inverter configuration"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "sma"
                  },
                  "model": {
                    "type": "string",
                    "const": "core1"
                  },
                  "connection": {
                    "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/connection"
                  },
                  "unitId": {
                    "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/unitId"
                  },
                  "pollingIntervalMs": {
                    "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/pollingIntervalMs"
                  }
                },
                "required": [
                  "type",
                  "model",
                  "connection"
                ],
                "additionalProperties": false,
                "description": "SMA inverter configuration"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "const": "mqtt"
                  },
                  "host": {
                    "type": "string",
                    "description": "The host of the MQTT broker, including \"mqtt://\""
                  },
                  "username": {
                    "type": "string",
                    "description": "The username for the MQTT broker"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the MQTT broker"
                  },
                  "topic": {
                    "type": "string",
                    "description": "The topic to pull inverter readings from"
                  },
                  "pollingIntervalMs": {
                    "type": "number",
                    "description": "The minimum number of seconds between polling, subject to the latency of the polling loop.",
                    "default": 200
                  }
                },
                "required": [
                  "type",
                  "host",
                  "topic"
                ],
                "additionalProperties": false,
                "description": "MQTT inverter configuration"
              }
            ]
          },
          "description": "Inverter configuration"
        },
        "inverterControl": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to control the inverters"
            },
            "sampleSeconds": {
              "type": "number",
              "minimum": 0,
              "description": "How many seconds of inverter and site data to sample to make control decisions.\nA shorter time will increase responsiveness to load changes but may introduce oscillations.\nA longer time will smooth out load changes but may result in overshoot.",
              "default": 5
            },
            "intervalSeconds": {
              "type": "number",
              "minimum": 0,
              "description": "The minimum number of seconds between control commands, subject to the latency of the control loop.",
              "default": 1
            },
            "batteryControlEnabled": {
              "type": "boolean",
              "description": "Whether to control battery storage"
            }
          },
          "required": [
            "enabled"
          ],
          "additionalProperties": false
        },
        "meter": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "sunspec"
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "feedin",
                    "consumption"
                  ]
                },
                "connection": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/connection"
                },
                "unitId": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/unitId"
                },
                "pollingIntervalMs": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/pollingIntervalMs"
                }
              },
              "required": [
                "type",
                "location",
                "connection"
              ],
              "additionalProperties": false,
              "description": "SunSpec meter configuration"
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "sma"
                },
                "model": {
                  "type": "string",
                  "const": "core1"
                },
                "connection": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/connection"
                },
                "unitId": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/unitId"
                },
                "pollingIntervalMs": {
                  "$ref": "#/definitions/config/properties/inverters/items/anyOf/0/properties/pollingIntervalMs"
                }
              },
              "required": [
                "type",
                "model",
                "connection"
              ],
              "additionalProperties": false,
              "description": "SMA meter configuration"
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "powerwall2"
                },
                "ip": {
                  "type": "string",
                  "pattern": "^(\\d{1,3}\\.){3}\\d{1,3}$",
                  "description": "The IP address of the Powerwall 2 gateway"
                },
                "password": {
                  "type": "string",
                  "description": "The customer password of the Powerwall 2 gateway. By default, this is the last 5 characters of the password sticker inside the gateway."
                },
                "timeoutSeconds": {
                  "type": "number",
                  "description": "Request timeout in seconds",
                  "default": 2
                },
                "pollingIntervalMs": {
                  "type": "number",
                  "description": "The minimum number of seconds between polling, subject to the latency of the polling loop.",
                  "default": 200
                }
              },
              "required": [
                "type",
                "ip",
                "password"
              ],
              "additionalProperties": false,
              "description": "Powerwall 2 meter configuration"
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "const": "mqtt"
                },
                "host": {
                  "type": "string",
                  "description": "The host of the MQTT broker, including \"mqtt://\""
                },
                "username": {
                  "type": "string",
                  "description": "The username for the MQTT broker"
                },
                "password": {
                  "type": "string",
                  "description": "The password for the MQTT broker"
                },
                "topic": {
                  "type": "string",
                  "description": "The topic to pull meter readings from"
                },
                "pollingIntervalMs": {
                  "type": "number",
                  "description": "The minimum number of seconds between polling, subject to the latency of the polling loop.",
                  "default": 200
                }
              },
              "required": [
                "type",
                "host",
                "topic"
              ],
              "additionalProperties": false,
              "description": "MQTT meter configuration"
            }
          ]
        },
        "publish": {
          "type": "object",
          "properties": {
            "mqtt": {
              "type": "object",
              "properties": {
                "host": {
                  "type": "string",
                  "description": "The host of the MQTT broker, including \"mqtt://\""
                },
                "username": {
                  "type": "string",
                  "description": "The username for the MQTT broker"
                },
                "password": {
                  "type": "string",
                  "description": "The password for the MQTT broker"
                },
                "topic": {
                  "type": "string",
                  "description": "The topic to publish limits"
                }
              },
              "required": [
                "host",
                "topic"
              ],
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "description": "Publish active control limits"
        },
        "battery": {
          "type": "object",
          "properties": {
            "chargeBufferWatts": {
              "type": "number",
              "description": "A minimum buffer to allow the battery to charge if export limit would otherwise have prevented the battery from charging"
            }
          },
          "required": [
            "chargeBufferWatts"
          ],
          "additionalProperties": false,
          "description": "Battery configuration"
        }
      },
      "required": [
        "setpoints",
        "inverters",
        "inverterControl",
        "meter"
      ],
      "additionalProperties": false
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}